__delitem__(self, key, /)
    Delete self[key].
 |
__ge__(self, value, /)
    Return self>=value.
 |
__getattribute__(self, name, /)
    Return getattr(self, name).
 |
__gt__(self, value, /)
    Return self>value.
 |
__init__(self, /, *args, **kwargs)
    Initialize self.  See help(type(self)) for accurate signature.
 |
__ior__(self, value, /)
    Return self|=value.
 |
__le__(self, value, /)
    Return self<=value.
 |
__lt__(self, value, /)
    Return self<value.
 |
__or__(self, value, /)
    Return self|value.
 |
__repr__(self, /)
    Return repr(self).
 |
__reversed__(self, /)
    Return a reverse iterator over the dict keys.
 |
__ror__(self, value, /)
    Return value|self.
 |
__setitem__(self, key, value, /)
    Set self[key] to value.
 |
__sizeof__(...)
    D.__sizeof__() -> size of D in memory, in bytes
 |
clear(...)
    D.clear() -> None.  Remove all items from D.
 |
copy(...)
    D.copy() -> a shallow copy of D
 |
pop(...)
    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
 |
    If the key is not found, return the default if given; otherwise,
    raise a KeyError.
 |
popitem(self, /)
    Remove and return a (key, value) pair as a 2-tuple.
 |
    Pairs are returned in LIFO (last-in, first-out) order.
    Raises KeyError if the dict is empty.
 |
setdefault(self, key, default=None, /)
    Insert key with a value of default if key is not in the dictionary.
 |
    Return the value for key if key is in the dictionary, else default.
 |
update(...)
    D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.
    If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
    In either case, this is followed by: for k in F:  D[k] = F[k]
 |
----------------------------------------------------------------------
Class methods defined here:
 |
__class_getitem__(...)
    See PEP 585
 |
fromkeys(iterable, value=None, /)
    Create a new dictionary with keys from iterable and values set to value.
 |
----------------------------------------------------------------------
Static methods defined here:
 |
__new__(*args, **kwargs)
    Create and return a new object.  See help(type) for accurate signature.
 |
----------------------------------------------------------------------
Data and other attributes defined here:
 |
__hash__ = None

